'use extensible';
<% if (includeReducer) { %>
import Immutable from 'immutable';
import { createSelector } from 'reselect';

/**
 * Given API data from the backend, convert it for presentation to the user.
 *
 * @param {Immutable.List} <%= componentNameCamel %>
 * @returns {Immutable.List}
 */
function parse<%= componentName %>FromBackend(<%= componentNameCamel %>) {
  if (!<%= componentNameCamel %>) return Immutable.List();

  return <%= componentNameCamel %>.map((<%= componentNameCamel %>Item) => {
    return <%= componentNameCamel %>Item;
  });
}

const <%= componentNameCamel %>Selector = createSelector(
  (state) => state.<%= componentNameCamel %>.<%= componentNameCamel %>,
  parse<%= componentName %>FromBackend,
);
<% } %>
const utils = {<% if (includeReducer) { %>

  <%= componentNameCamel %>Selector,
<% } %>
};

export default utils;
