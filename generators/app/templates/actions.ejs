import constants from '../../../constants';
import reduxUtils from '../../../redux-utils';

// --- Action types

const actionTypes = reduxUtils.createActionTypes(constants.namespace.<%= componentNameConstant %>, [
  'CLICKED_VIEW_<%= componentNameConstant %>',
<% if (includeReducer) { %>
  'PULLED_TO_REFRESH_<%= componentNameConstant %>',

  'INVALIDATE_CACHE_<%= componentNameConstant %>',

  'GET_<%= componentNameConstant %>',
  'SET_<%= componentNameConstant %>',
  'LOADED_<%= componentNameConstant %>',
  'FAILED_TO_GET_<%= componentNameConstant %>',
<% } %>]);

export default actionTypes;

// --- Action creators

export class <%= componentName %>Actions {

  static clickedView<%= componentName %> = () =>
    reduxUtils.createEvent(CLICKED_VIEW_<%= componentNameConstant %>);<% if (includeReducer) { %>

  static pulledToRefresh = () =>
    reduxUtils.createEvent(PULLED_TO_REFRESH);

  static invalidateCache = () =>
    reduxUtils.createEvent(INVALIDATE_CACHE);

  static get<%= componentName %> = (<%= componentNameCamel %>Link) =>
    reduxUtils.createAction(GET_<%= componentNameConstant %>, { <%= componentNameCamel %>Link });

  static set<%= componentName %> = (<%= componentNameCamel %>, <%= componentNameCamel %>Link) =>
    reduxUtils.createAction(SET_<%= componentNameConstant %>, { <%= componentNameCamel %>, <%= componentNameCamel %>Link });

  static loaded<%= componentName %> = () =>
    reduxUtils.createEvent(LOADED_<%= componentNameConstant %>);

  static failedToGet<%= componentName %> = (error) =>
    reduxUtils.createEvent(FAILED_TO_GET_<%= componentNameConstant %>, error);<% } %>

}
